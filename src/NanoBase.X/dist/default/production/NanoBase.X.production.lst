

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Nov 19 09:05:03 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 30/04/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F15244 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  009A                     	;# 
    76  009B                     	;# 
    77  009B                     	;# 
    78  009C                     	;# 
    79  009D                     	;# 
    80  009E                     	;# 
    81  009F                     	;# 
    82  010C                     	;# 
    83  010D                     	;# 
    84  0119                     	;# 
    85  011A                     	;# 
    86  011B                     	;# 
    87  011B                     	;# 
    88  011C                     	;# 
    89  011D                     	;# 
    90  011E                     	;# 
    91  011F                     	;# 
    92  018C                     	;# 
    93  018D                     	;# 
    94  018E                     	;# 
    95  018F                     	;# 
    96  0190                     	;# 
    97  0191                     	;# 
    98  0192                     	;# 
    99  020C                     	;# 
   100  020D                     	;# 
   101  020E                     	;# 
   102  020E                     	;# 
   103  020F                     	;# 
   104  020F                     	;# 
   105  0210                     	;# 
   106  0210                     	;# 
   107  0211                     	;# 
   108  0211                     	;# 
   109  028C                     	;# 
   110  028C                     	;# 
   111  028D                     	;# 
   112  028D                     	;# 
   113  028E                     	;# 
   114  028F                     	;# 
   115  0290                     	;# 
   116  0291                     	;# 
   117  030C                     	;# 
   118  030C                     	;# 
   119  030D                     	;# 
   120  030E                     	;# 
   121  030F                     	;# 
   122  0310                     	;# 
   123  0310                     	;# 
   124  0311                     	;# 
   125  0312                     	;# 
   126  0313                     	;# 
   127  0314                     	;# 
   128  0314                     	;# 
   129  0315                     	;# 
   130  0316                     	;# 
   131  0318                     	;# 
   132  0318                     	;# 
   133  0319                     	;# 
   134  031A                     	;# 
   135  059C                     	;# 
   136  059C                     	;# 
   137  059D                     	;# 
   138  059D                     	;# 
   139  059E                     	;# 
   140  059F                     	;# 
   141  070C                     	;# 
   142  070D                     	;# 
   143  070E                     	;# 
   144  0716                     	;# 
   145  0717                     	;# 
   146  0718                     	;# 
   147  080C                     	;# 
   148  0811                     	;# 
   149  0813                     	;# 
   150  0814                     	;# 
   151  081A                     	;# 
   152  081A                     	;# 
   153  081B                     	;# 
   154  081C                     	;# 
   155  081C                     	;# 
   156  081D                     	;# 
   157  081E                     	;# 
   158  081F                     	;# 
   159  088E                     	;# 
   160  0890                     	;# 
   161  0891                     	;# 
   162  0892                     	;# 
   163  0893                     	;# 
   164  090C                     	;# 
   165  1E8F                     	;# 
   166  1E90                     	;# 
   167  1E91                     	;# 
   168  1E92                     	;# 
   169  1E93                     	;# 
   170  1E9C                     	;# 
   171  1EA1                     	;# 
   172  1EA2                     	;# 
   173  1EC3                     	;# 
   174  1EC5                     	;# 
   175  1EC6                     	;# 
   176  1EC7                     	;# 
   177  1ECB                     	;# 
   178  1ECB                     	;# 
   179  1ECB                     	;# 
   180  1ECC                     	;# 
   181  1ECC                     	;# 
   182  1ECC                     	;# 
   183  1F10                     	;# 
   184  1F11                     	;# 
   185  1F12                     	;# 
   186  1F14                     	;# 
   187  1F15                     	;# 
   188  1F1C                     	;# 
   189  1F1D                     	;# 
   190  1F1E                     	;# 
   191  1F1F                     	;# 
   192  1F20                     	;# 
   193  1F21                     	;# 
   194  1F22                     	;# 
   195  1F23                     	;# 
   196  1F24                     	;# 
   197  1F25                     	;# 
   198  1F26                     	;# 
   199  1F27                     	;# 
   200  1F38                     	;# 
   201  1F39                     	;# 
   202  1F3A                     	;# 
   203  1F3B                     	;# 
   204  1F3C                     	;# 
   205  1F3D                     	;# 
   206  1F3E                     	;# 
   207  1F3F                     	;# 
   208  1F43                     	;# 
   209  1F44                     	;# 
   210  1F45                     	;# 
   211  1F46                     	;# 
   212  1F47                     	;# 
   213  1F48                     	;# 
   214  1F49                     	;# 
   215  1F4A                     	;# 
   216  1F4E                     	;# 
   217  1F4F                     	;# 
   218  1F50                     	;# 
   219  1F51                     	;# 
   220  1F52                     	;# 
   221  1F53                     	;# 
   222  1F54                     	;# 
   223  1F55                     	;# 
   224  1FE4                     	;# 
   225  1FE5                     	;# 
   226  1FE6                     	;# 
   227  1FE7                     	;# 
   228  1FE8                     	;# 
   229  1FE8                     	;# 
   230  1FE9                     	;# 
   231  1FEA                     	;# 
   232  1FEB                     	;# 
   233  1FED                     	;# 
   234  1FEE                     	;# 
   235  1FEF                     	;# 
   236                           
   237                           	psect	idataCOMMON
   238  0766                     __pidataCOMMON:
   239                           
   240                           ;initializer for _dutyCycle75
   241  0766  34EE               	retlw	238
   242  0767  3402               	retlw	2
   243                           
   244                           ;initializer for _dutyCycle50
   245  0768  34F4               	retlw	244
   246  0769  3401               	retlw	1
   247                           
   248                           ;initializer for _dutyCycle10
   249  076A  340A               	retlw	10
   250  076B  3400               	retlw	0
   251                           
   252                           	psect	idataBANK0
   253  075F                     __pidataBANK0:
   254                           
   255                           ;initializer for _dutyCycle100
   256  075F  34E7               	retlw	231
   257  0760  3403               	retlw	3
   258  0014                     _TRISC	set	20
   259  0013                     _TRISB	set	19
   260  0012                     _TRISA	set	18
   261  001A                     _LATC	set	26
   262  0019                     _LATB	set	25
   263  0018                     _LATA	set	24
   264  00A2                     _TRISC2	set	162
   265  0092                     _TRISA2	set	146
   266  028E                     _T2CON	set	654
   267  028C                     _T2TMR	set	652
   268  028D                     _T2PR	set	653
   269  0291                     _T2RST	set	657
   270  028F                     _T2HLT	set	655
   271  0290                     _T2CLKCON	set	656
   272  0314                     _PWM3DCL	set	788
   273  0315                     _PWM3DCH	set	789
   274  0316                     _PWM3CON	set	790
   275  070D                     _PIR1bits	set	1805
   276  0892                     _OSCTUNE	set	2194
   277  0893                     _OSCFRQ	set	2195
   278  0891                     _OSCEN	set	2193
   279  1F12                     _RA2PPS	set	7954
   280  1F38                     _ANSELAbits	set	7992
   281  1F52                     _INLVLC	set	8018
   282  1F47                     _INLVLB	set	8007
   283  1F3C                     _INLVLA	set	7996
   284  1F51                     _SLRCONC	set	8017
   285  1F46                     _SLRCONB	set	8006
   286  1F3B                     _SLRCONA	set	7995
   287  1F50                     _ODCONC	set	8016
   288  1F45                     _ODCONB	set	8005
   289  1F3A                     _ODCONA	set	7994
   290  1F4F                     _WPUC	set	8015
   291  1F39                     _WPUA	set	7993
   292  1F44                     _WPUB	set	8004
   293  1F38                     _ANSELA	set	7992
   294  1F43                     _ANSELB	set	8003
   295  1F4E                     _ANSELC	set	8014
   296  FA7A                     _WPUC2	set	64122
   297                           
   298                           	psect	cinit
   299  07E3                     start_initialization:	
   300                           ; #config settings
   301                           
   302  07E3                     __initialization:
   303                           
   304                           ; Initialize objects allocated to COMMON
   305  07E3  3066               	movlw	low __pidataCOMMON
   306  07E4  0084               	movwf	4
   307  07E5  3087               	movlw	(high __pidataCOMMON)| (0+128)
   308  07E6  0085               	movwf	5
   309  07E7  0012               	moviw fsr0++
   310  07E8  00F0               	movwf	__pdataCOMMON& (0+127)
   311  07E9  0012               	moviw fsr0++
   312  07EA  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   313  07EB  0012               	moviw fsr0++
   314  07EC  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   315  07ED  0012               	moviw fsr0++
   316  07EE  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   317  07EF  0012               	moviw fsr0++
   318  07F0  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   319  07F1  0012               	moviw fsr0++
   320  07F2  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   321                           
   322                           ; Initialize objects allocated to BANK0
   323  07F3  3187  275F  3187   	fcall	__pidataBANK0	;fetch initializer
   324  07F6  00A0               	movwf	__pdataBANK0& (0+127)
   325  07F7  3187  2760  3187   	fcall	__pidataBANK0+1	;fetch initializer
   326  07FA  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   327                           
   328                           ; Clear objects allocated to COMMON
   329  07FB  01FB               	clrf	__pbssCOMMON& (0+127)
   330  07FC  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   331  07FD                     end_of_initialization:	
   332                           ;End of C runtime variable initialization code
   333                           
   334  07FD                     __end_of__initialization:
   335  07FD  0140               	movlb	0
   336  07FE  3187  2F98         	ljmp	_main	;jump to C main() function
   337                           
   338                           	psect	bssCOMMON
   339  007B                     __pbssCOMMON:
   340  007B                     _par_impar:
   341  007B                     	ds	2
   342                           
   343                           	psect	dataCOMMON
   344  0070                     __pdataCOMMON:
   345  0070                     _dutyCycle75:
   346  0070                     	ds	2
   347  0072                     _dutyCycle50:
   348  0072                     	ds	2
   349  0074                     _dutyCycle10:
   350  0074                     	ds	2
   351                           
   352                           	psect	dataBANK0
   353  0020                     __pdataBANK0:
   354  0020                     _dutyCycle100:
   355  0020                     	ds	2
   356                           
   357                           	psect	cstackCOMMON
   358  0076                     __pcstackCOMMON:
   359  0076                     ?_PIN_MANAGER_Initialize:
   360  0076                     ??_PIN_MANAGER_Initialize:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0076                     ?_OSCILLATOR_Initialize:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0076                     ??_OSCILLATOR_Initialize:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0076                     ?_TMR2_Initialize:	
   370                           ; 1 bytes @ 0x0
   371                           
   372  0076                     ??_TMR2_Initialize:	
   373                           ; 1 bytes @ 0x0
   374                           
   375  0076                     ?_PWM3_Initialize:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0076                     ??_PWM3_Initialize:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0076                     ?_PWM3_LoadDutyValue:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0076                     ?_main:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0076                     PWM3_LoadDutyValue@dutyValue:	
   388                           ; 1 bytes @ 0x0
   389                           
   390                           
   391                           ; 2 bytes @ 0x0
   392  0076                     	ds	2
   393  0078                     ??_PWM3_LoadDutyValue:
   394                           
   395                           ; 1 bytes @ 0x2
   396  0078                     	ds	2
   397  007A                     ??_main:
   398                           
   399                           ; 1 bytes @ 0x4
   400  007A                     	ds	1
   401                           
   402                           	psect	maintext
   403  0798                     __pmaintext:	
   404 ;;
   405 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   406 ;;
   407 ;; *************** function _main *****************
   408 ;; Defined at:
   409 ;;		line 149 in file "main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0, pclath, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : B3F/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   423 ;;      Params:         0       0       0       0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0       0
   425 ;;      Temps:          1       0       0       0       0       0       0       0
   426 ;;      Totals:         1       0       0       0       0       0       0       0
   427 ;;Total ram usage:        1 bytes
   428 ;; Hardware stack levels required when called:    1
   429 ;; This function calls:
   430 ;;		_OSCILLATOR_Initialize
   431 ;;		_PIN_MANAGER_Initialize
   432 ;;		_PWM3_Initialize
   433 ;;		_PWM3_LoadDutyValue
   434 ;;		_TMR2_Initialize
   435 ;; This function is called by:
   436 ;;		Startup code after reset
   437 ;; This function uses a non-reentrant model
   438 ;;
   439                           
   440                           
   441                           ;psect for function _main
   442  0798                     _main:
   443  0798                     l711:	
   444                           ;incstack = 0
   445                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   446                           
   447                           
   448                           ;main.c: 151:     PIN_MANAGER_Initialize();
   449  0798  3187  27B5  3187   	fcall	_PIN_MANAGER_Initialize
   450  079B                     l713:
   451                           
   452                           ;main.c: 152:     OSCILLATOR_Initialize();
   453  079B  3187  2761  3187   	fcall	_OSCILLATOR_Initialize
   454  079E                     l715:
   455                           
   456                           ;main.c: 153:     TMR2_Initialize();
   457  079E  3187  2774  3187   	fcall	_TMR2_Initialize
   458  07A1                     l717:
   459                           
   460                           ;main.c: 154:     PWM3_Initialize();
   461  07A1  3187  276C  3187   	fcall	_PWM3_Initialize
   462  07A4                     l719:
   463                           
   464                           ;main.c: 156:       PWM3_LoadDutyValue(dutyCycle10);
   465  07A4  300A               	movlw	10
   466  07A5  00F6               	movwf	PWM3_LoadDutyValue@dutyValue
   467  07A6  3000               	movlw	0
   468  07A7  00F7               	movwf	PWM3_LoadDutyValue@dutyValue+1
   469  07A8  3187  2782  3187   	fcall	_PWM3_LoadDutyValue
   470  07AB                     l721:
   471                           
   472                           ;main.c: 157:       _delay((unsigned long)((10)*(1000000/4000.0)));
   473  07AB  3004               	movlw	4
   474  07AC  00FA               	movwf	??_main
   475  07AD  303E               	movlw	62
   476  07AE                     u37:
   477  07AE  0B89               	decfsz	9,f
   478  07AF  2FAE               	goto	u37
   479  07B0  0BFA               	decfsz	??_main,f
   480  07B1  2FAE               	goto	u37
   481  07B2  2FA4               	goto	l719
   482  07B3  3180  2802         	ljmp	start
   483  07B5                     __end_of_main:
   484                           
   485                           	psect	text1
   486  0774                     __ptext1:	
   487 ;; *************** function _TMR2_Initialize *****************
   488 ;; Defined at:
   489 ;;		line 121 in file "main.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   503 ;;      Params:         0       0       0       0       0       0       0       0
   504 ;;      Locals:         0       0       0       0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0       0       0       0
   506 ;;      Totals:         0       0       0       0       0       0       0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_main
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           
   517                           ;psect for function _TMR2_Initialize
   518  0774                     _TMR2_Initialize:
   519  0774                     l681:	
   520                           ;incstack = 0
   521                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
   522                           
   523                           
   524                           ;main.c: 123:     T2CLKCON = 0x01;
   525  0774  3001               	movlw	1
   526  0775  0145               	movlb	5	; select bank5
   527  0776  0090               	movwf	16	;volatile
   528  0777                     l683:
   529                           
   530                           ;main.c: 124:     T2HLT = 0x00;
   531  0777  018F               	clrf	15	;volatile
   532  0778                     l685:
   533                           
   534                           ;main.c: 125:     T2RST = 0x00;
   535  0778  0191               	clrf	17	;volatile
   536                           
   537                           ;main.c: 126:     T2PR = 249;
   538  0779  30F9               	movlw	249
   539  077A  008D               	movwf	13	;volatile
   540  077B                     l687:
   541                           
   542                           ;main.c: 127:     T2TMR = 0x00;
   543  077B  018C               	clrf	12	;volatile
   544  077C                     l689:
   545                           
   546                           ;main.c: 128:     PIR1bits.TMR2IF = 0;
   547  077C  014E               	movlb	14	; select bank14
   548  077D  130D               	bcf	13,6	;volatile
   549  077E                     l691:
   550                           
   551                           ;main.c: 129:     T2CON = 0b10000000;
   552  077E  3080               	movlw	128
   553  077F  0145               	movlb	5	; select bank5
   554  0780  008E               	movwf	14	;volatile
   555  0781                     l99:
   556  0781  0008               	return
   557  0782                     __end_of_TMR2_Initialize:
   558                           
   559                           	psect	text2
   560  0782                     __ptext2:	
   561 ;; *************** function _PWM3_LoadDutyValue *****************
   562 ;; Defined at:
   563 ;;		line 141 in file "main.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  dutyValue       2    0[COMMON] unsigned short 
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, status,2, status,0
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   577 ;;      Params:         2       0       0       0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0       0
   579 ;;      Temps:          2       0       0       0       0       0       0       0
   580 ;;      Totals:         4       0       0       0       0       0       0       0
   581 ;;Total ram usage:        4 bytes
   582 ;; Hardware stack levels used:    1
   583 ;; This function calls:
   584 ;;		Nothing
   585 ;; This function is called by:
   586 ;;		_main
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           
   591                           ;psect for function _PWM3_LoadDutyValue
   592  0782                     _PWM3_LoadDutyValue:
   593  0782                     l709:	
   594                           ;incstack = 0
   595                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
   596                           
   597                           
   598                           ;main.c: 141:   void PWM3_LoadDutyValue(uint16_t dutyValue);main.c: 142:  {;main.c: 143:
      +                                PWM3DCH = (dutyValue & 0x03FC)>>2;
   599  0782  0877               	movf	PWM3_LoadDutyValue@dutyValue+1,w
   600  0783  00F9               	movwf	??_PWM3_LoadDutyValue+1
   601  0784  0876               	movf	PWM3_LoadDutyValue@dutyValue,w
   602  0785  00F8               	movwf	??_PWM3_LoadDutyValue
   603  0786  36F9               	lsrf	??_PWM3_LoadDutyValue+1,f
   604  0787  0CF8               	rrf	??_PWM3_LoadDutyValue,f
   605  0788  36F9               	lsrf	??_PWM3_LoadDutyValue+1,f
   606  0789  0CF8               	rrf	??_PWM3_LoadDutyValue,f
   607  078A  0878               	movf	??_PWM3_LoadDutyValue,w
   608  078B  0146               	movlb	6	; select bank6
   609  078C  0095               	movwf	21	;volatile
   610                           
   611                           ;main.c: 144:      PWM3DCL = (dutyValue & 0x0003)<<6;
   612  078D  0876               	movf	PWM3_LoadDutyValue@dutyValue,w
   613  078E  3903               	andlw	3
   614  078F  00F8               	movwf	??_PWM3_LoadDutyValue
   615  0790  3005               	movlw	5
   616  0791                     u25:
   617  0791  35F8               	lslf	??_PWM3_LoadDutyValue,f
   618  0792  3EFF               	addlw	-1
   619  0793  1D03               	skipz
   620  0794  2F91               	goto	u25
   621  0795  3578               	lslf	??_PWM3_LoadDutyValue,w
   622  0796  0094               	movwf	20	;volatile
   623  0797                     l105:
   624  0797  0008               	return
   625  0798                     __end_of_PWM3_LoadDutyValue:
   626                           
   627                           	psect	text3
   628  076C                     __ptext3:	
   629 ;; *************** function _PWM3_Initialize *****************
   630 ;; Defined at:
   631 ;;		line 132 in file "main.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   645 ;;      Params:         0       0       0       0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0       0       0       0
   648 ;;      Totals:         0       0       0       0       0       0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           
   659                           ;psect for function _PWM3_Initialize
   660  076C                     _PWM3_Initialize:
   661  076C                     l693:	
   662                           ;incstack = 0
   663                           ; Regs used in _PWM3_Initialize: [wreg]
   664                           
   665                           
   666                           ;main.c: 134:     PWM3CON = 0x90;
   667  076C  3090               	movlw	144
   668  076D  0146               	movlb	6	; select bank6
   669  076E  0096               	movwf	22	;volatile
   670                           
   671                           ;main.c: 135:     PWM3DCH = 0x3E;
   672  076F  303E               	movlw	62
   673  0770  0095               	movwf	21	;volatile
   674                           
   675                           ;main.c: 136:     PWM3DCL = 0x40;
   676  0771  3040               	movlw	64
   677  0772  0094               	movwf	20	;volatile
   678  0773                     l102:
   679  0773  0008               	return
   680  0774                     __end_of_PWM3_Initialize:
   681                           
   682                           	psect	text4
   683  07B5                     __ptext4:	
   684 ;; *************** function _PIN_MANAGER_Initialize *****************
   685 ;; Defined at:
   686 ;;		line 66 in file "main.c"
   687 ;; Parameters:    Size  Location     Type
   688 ;;		None
   689 ;; Auto vars:     Size  Location     Type
   690 ;;		None
   691 ;; Return value:  Size  Location     Type
   692 ;;                  1    wreg      void 
   693 ;; Registers used:
   694 ;;		wreg, status,2
   695 ;; Tracked objects:
   696 ;;		On entry : 0/0
   697 ;;		On exit  : 0/0
   698 ;;		Unchanged: 0/0
   699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   700 ;;      Params:         0       0       0       0       0       0       0       0
   701 ;;      Locals:         0       0       0       0       0       0       0       0
   702 ;;      Temps:          0       0       0       0       0       0       0       0
   703 ;;      Totals:         0       0       0       0       0       0       0       0
   704 ;;Total ram usage:        0 bytes
   705 ;; Hardware stack levels used:    1
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		_main
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           
   714                           ;psect for function _PIN_MANAGER_Initialize
   715  07B5                     _PIN_MANAGER_Initialize:
   716  07B5                     l639:	
   717                           ;incstack = 0
   718                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
   719                           
   720                           
   721                           ;main.c: 69:     LATA = 0x00;
   722  07B5  0140               	movlb	0	; select bank0
   723  07B6  0198               	clrf	24	;volatile
   724                           
   725                           ;main.c: 70:     LATB = 0x00;
   726  07B7  0199               	clrf	25	;volatile
   727                           
   728                           ;main.c: 71:     LATC = 0x00;
   729  07B8  019A               	clrf	26	;volatile
   730  07B9                     l641:
   731                           
   732                           ;main.c: 74:     TRISA = 0x3B;
   733  07B9  303B               	movlw	59
   734  07BA  0092               	movwf	18	;volatile
   735  07BB                     l643:
   736                           
   737                           ;main.c: 75:     TRISB = 0xF0;
   738  07BB  30F0               	movlw	240
   739  07BC  0093               	movwf	19	;volatile
   740  07BD                     l645:
   741                           
   742                           ;main.c: 76:     TRISC = 0xFF;
   743  07BD  30FF               	movlw	255
   744  07BE  0094               	movwf	20	;volatile
   745  07BF                     l647:
   746                           
   747                           ;main.c: 79:     ANSELC = 0xFB;
   748  07BF  30FB               	movlw	251
   749  07C0  017E               	movlb	62	; select bank62
   750  07C1  00CE               	movwf	78	;volatile
   751  07C2                     l649:
   752                           
   753                           ;main.c: 80:     ANSELB = 0xF0;
   754  07C2  30F0               	movlw	240
   755  07C3  00C3               	movwf	67	;volatile
   756  07C4                     l651:
   757                           
   758                           ;main.c: 81:     ANSELA = 0x33;
   759  07C4  3033               	movlw	51
   760  07C5  00B8               	movwf	56	;volatile
   761                           
   762                           ;main.c: 84:     WPUB = 0x00;
   763  07C6  01C4               	clrf	68	;volatile
   764  07C7                     l653:
   765                           
   766                           ;main.c: 85:     WPUA = 0x04;
   767  07C7  3004               	movlw	4
   768  07C8  00B9               	movwf	57	;volatile
   769  07C9                     l655:
   770                           
   771                           ;main.c: 86:     WPUC = 0x04;
   772  07C9  3004               	movlw	4
   773  07CA  00CF               	movwf	79	;volatile
   774                           
   775                           ;main.c: 89:     ODCONA = 0x00;
   776  07CB  01BA               	clrf	58	;volatile
   777                           
   778                           ;main.c: 90:     ODCONB = 0x00;
   779  07CC  01C5               	clrf	69	;volatile
   780                           
   781                           ;main.c: 91:     ODCONC = 0x00;
   782  07CD  01D0               	clrf	80	;volatile
   783  07CE                     l657:
   784                           
   785                           ;main.c: 94:     SLRCONA = 0x37;
   786  07CE  3037               	movlw	55
   787  07CF  00BB               	movwf	59	;volatile
   788  07D0                     l659:
   789                           
   790                           ;main.c: 95:     SLRCONB = 0xF0;
   791  07D0  30F0               	movlw	240
   792  07D1  00C6               	movwf	70	;volatile
   793  07D2                     l661:
   794                           
   795                           ;main.c: 96:     SLRCONC = 0xFF;
   796  07D2  30FF               	movlw	255
   797  07D3  00D1               	movwf	81	;volatile
   798  07D4                     l663:
   799                           
   800                           ;main.c: 99:     INLVLA = 0x3F;
   801  07D4  303F               	movlw	63
   802  07D5  00BC               	movwf	60	;volatile
   803  07D6                     l665:
   804                           
   805                           ;main.c: 100:     INLVLB = 0xF0;
   806  07D6  30F0               	movlw	240
   807  07D7  00C7               	movwf	71	;volatile
   808  07D8                     l667:
   809                           
   810                           ;main.c: 101:     INLVLC = 0xFF;
   811  07D8  30FF               	movlw	255
   812  07D9  00D2               	movwf	82	;volatile
   813  07DA                     l669:
   814                           
   815                           ;main.c: 104:     TRISA2 = 0;
   816  07DA  0140               	movlb	0	; select bank0
   817  07DB  1112               	bcf	18,2	;volatile
   818  07DC                     l671:
   819                           
   820                           ;main.c: 105:     TRISC2 = 1;
   821  07DC  1514               	bsf	20,2	;volatile
   822  07DD                     l673:
   823                           
   824                           ;main.c: 106:     WPUC2 = 1;
   825  07DD  017E               	movlb	62	; select bank62
   826  07DE  154F               	bsf	79,2	;volatile
   827  07DF                     l675:
   828                           
   829                           ;main.c: 107:     ANSELAbits.ANSA1 = 1;
   830  07DF  14B8               	bsf	56,1	;volatile
   831  07E0                     l677:
   832                           
   833                           ;main.c: 109:     RA2PPS = 0x03;
   834  07E0  3003               	movlw	3
   835  07E1  0092               	movwf	18	;volatile
   836  07E2                     l93:
   837  07E2  0008               	return
   838  07E3                     __end_of_PIN_MANAGER_Initialize:
   839                           
   840                           	psect	text5
   841  0761                     __ptext5:	
   842 ;; *************** function _OSCILLATOR_Initialize *****************
   843 ;; Defined at:
   844 ;;		line 114 in file "main.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		status,2
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   858 ;;      Params:         0       0       0       0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0       0       0       0
   861 ;;      Totals:         0       0       0       0       0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _OSCILLATOR_Initialize
   873  0761                     _OSCILLATOR_Initialize:
   874  0761                     l679:	
   875                           ;incstack = 0
   876                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
   877                           
   878                           
   879                           ;main.c: 116:     OSCEN = 0x00;
   880  0761  0151               	movlb	17	; select bank17
   881  0762  0191               	clrf	17	;volatile
   882                           
   883                           ;main.c: 117:     OSCFRQ = 0x00;
   884  0763  0193               	clrf	19	;volatile
   885                           
   886                           ;main.c: 118:     OSCTUNE = 0x00;
   887  0764  0192               	clrf	18	;volatile
   888  0765                     l96:
   889  0765  0008               	return
   890  0766                     __end_of_OSCILLATOR_Initialize:
   891  007E                     btemp	set	126	;btemp
   892  007E                     wtemp0	set	126
   893                           
   894                           	psect	config
   895                           
   896                           ;Config register CONFIG1 @ 0x8007
   897                           ;	External Oscillator Mode Selection bits
   898                           ;	FEXTOSC = OFF, Oscillator not enabled
   899                           ;	Power-up Default Value for COSC bits
   900                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
   901                           ;	Clock Out Enable bit
   902                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
   903                           ;	VDD Range Analog Calibration Selection bit
   904                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
   905  8007                     	org	32775
   906  8007  3FED               	dw	16365
   907                           
   908                           ;Config register CONFIG2 @ 0x8008
   909                           ;	Master Clear Enable bit
   910                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
   911                           ;	Power-up Timer Selection bits
   912                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   913                           ;	WDT Operating Mode bits
   914                           ;	WDTE = OFF, WDT disabled; SEN is ignored
   915                           ;	Brown-out Reset Enable bits
   916                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
   917                           ;	Brown-out Reset Voltage Selection bit
   918                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
   919                           ;	PPSLOCKED One-Way Set Enable bit
   920                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
   921                           ;	Stack Overflow/Underflow Reset Enable bit
   922                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
   923  8008                     	org	32776
   924  8008  3FE7               	dw	16359
   925                           
   926                           ;Config register CONFIG4 @ 0x800A
   927                           ;	Boot Block Size Selection bits
   928                           ;	BBSIZE = BB512, 512 words boot block size
   929                           ;	Boot Block Enable bit
   930                           ;	BBEN = OFF, Boot Block is disabled
   931                           ;	SAF Enable bit
   932                           ;	SAFEN = OFF, SAF is disabled
   933                           ;	Application Block Write Protection bit
   934                           ;	WRTAPP = OFF, Application Block is not write-protected
   935                           ;	Boot Block Write Protection bit
   936                           ;	WRTB = OFF, Boot Block is not write-protected
   937                           ;	Configuration Registers Write Protection bit
   938                           ;	WRTC = OFF, Configuration Registers are not write-protected
   939                           ;	Storage Area Flash (SAF) Write Protection bit
   940                           ;	WRTSAF = OFF, SAF is not write-protected
   941                           ;	Low Voltage Programming Enable bit
   942                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
   943  800A                     	org	32778
   944  800A  3FFF               	dw	16383
   945                           
   946                           ;Config register CONFIG5 @ 0x800B
   947                           ;	User Program Flash Memory Code Protection bit
   948                           ;	CP = OFF, User Program Flash Memory code protection is disabled
   949  800B                     	org	32779
   950  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         2
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      13
    BANK0            80      0       2
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM3_LoadDutyValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     120
                                              4 COMMON     1     1      0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                 _PWM3_LoadDutyValue
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OSCILLATOR_Initialize
   _PIN_MANAGER_Initialize
   _PWM3_Initialize
   _PWM3_LoadDutyValue
   _TMR2_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       2       6        2.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       F      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Nov 19 09:05:03 2020

                             l93 07E2                               l96 0765                               l99 0781  
                             u25 0791                               u37 07AE                              l102 0773  
                            l105 0797                              l711 0798                              l641 07B9  
                            l721 07AB                              l713 079B                              l651 07C4  
                            l643 07BB                              l715 079E                              l661 07D2  
                            l653 07C7                              l645 07BD                              l709 0782  
                            l717 07A1                              l671 07DC                              l663 07D4  
                            l655 07C9                              l647 07BF                              l639 07B5  
                            l719 07A4                              l673 07DD                              l665 07D6  
                            l657 07CE                              l649 07C2                              l681 0774  
                            l675 07DF                              l667 07D8                              l659 07D0  
                            l691 077E                              l683 0777                              l677 07E0  
                            l669 07DA                              l693 076C                              l685 0778  
                            l679 0761                              l687 077B                              l689 077C  
                _TMR2_Initialize 0774                              wreg 0009                             _LATA 0018  
                           _LATB 0019                             _LATC 001A                             _T2PR 028D  
                           _WPUA 1F39                             _WPUB 1F44                             _WPUC 1F4F  
                           _main 0798                             fsr0h 0005                             fsr0l 0004  
                           btemp 007E                             start 0002   __size_of_OSCILLATOR_Initialize 0005  
  __end_of_OSCILLATOR_Initialize 0766                            ?_main 0076                            _T2CON 028E  
                          _T2HLT 028F                            _T2TMR 028C                            _T2RST 0291  
                          _OSCEN 0891                            _TRISA 0012                            _TRISB 0013  
                          _TRISC 0014                            _WPUC2 FA7A          __end_of_PWM3_Initialize 0774  
                          wtemp0 007E                  __initialization 07E3                     __end_of_main 07B5  
        __end_of_TMR2_Initialize 0782                           ??_main 007A                           _ANSELA 1F38  
                         _ANSELB 1F43                           _ANSELC 1F4E                           _RA2PPS 1F12  
                         _ODCONA 1F3A                           _ODCONB 1F45                           _ODCONC 1F50  
                         _INLVLA 1F3C                           _INLVLB 1F47                           _INLVLC 1F52  
                         _OSCFRQ 0893                           _TRISA2 0092                           _TRISC2 00A2  
    __size_of_PWM3_LoadDutyValue 0016                     __pdataCOMMON 0070                 ?_PWM3_Initialize 0076  
        __end_of__initialization 07FD                   __pcstackCOMMON 0076                     __pidataBANK0 075F  
               ?_TMR2_Initialize 0076                       __pmaintext 0798                          _OSCTUNE 0892  
                        _PWM3DCH 0315                          _PWM3DCL 0314                          _PWM3CON 0316  
                        _SLRCONA 1F3B                          _SLRCONB 1F46                          _SLRCONC 1F51  
                        __ptext1 0774                          __ptext2 0782                          __ptext3 076C  
                        __ptext4 07B5                          __ptext5 0761            _OSCILLATOR_Initialize 0761  
       ??_PIN_MANAGER_Initialize 0076             end_of_initialization 07FD       __end_of_PWM3_LoadDutyValue 0798  
                  __pidataCOMMON 0766           ?_OSCILLATOR_Initialize 0076              start_initialization 07E3  
__size_of_PIN_MANAGER_Initialize 002E         __size_of_PWM3_Initialize 0008                      __pdataBANK0 0020  
                    __pbssCOMMON 007B                        ___latbits 0001         __size_of_TMR2_Initialize 000E  
                   _dutyCycle100 0020           _PIN_MANAGER_Initialize 07B5                         _T2CLKCON 0290  
                      _par_impar 007B                         _PIR1bits 070D                ??_PWM3_Initialize 0076  
              ??_TMR2_Initialize 0076          ??_OSCILLATOR_Initialize 0076               _PWM3_LoadDutyValue 0782  
                     _ANSELAbits 1F38                      _dutyCycle10 0074                      _dutyCycle50 0072  
                    _dutyCycle75 0070              ?_PWM3_LoadDutyValue 0076                    __size_of_main 001D  
           ??_PWM3_LoadDutyValue 0078          ?_PIN_MANAGER_Initialize 0076      PWM3_LoadDutyValue@dutyValue 0076  
 __end_of_PIN_MANAGER_Initialize 07E3                  _PWM3_Initialize 076C  
