

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Apr 29 15:11:28 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F15244
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 30/04/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F15244 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  009A                     	;# 
    74  009B                     	;# 
    75  009B                     	;# 
    76  009C                     	;# 
    77  009D                     	;# 
    78  009E                     	;# 
    79  009F                     	;# 
    80  010C                     	;# 
    81  010D                     	;# 
    82  0119                     	;# 
    83  011A                     	;# 
    84  011B                     	;# 
    85  011B                     	;# 
    86  011C                     	;# 
    87  011D                     	;# 
    88  011E                     	;# 
    89  011F                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  018E                     	;# 
    93  018F                     	;# 
    94  0190                     	;# 
    95  0191                     	;# 
    96  0192                     	;# 
    97  020C                     	;# 
    98  020D                     	;# 
    99  020E                     	;# 
   100  020E                     	;# 
   101  020F                     	;# 
   102  020F                     	;# 
   103  0210                     	;# 
   104  0210                     	;# 
   105  0211                     	;# 
   106  0211                     	;# 
   107  028C                     	;# 
   108  028C                     	;# 
   109  028D                     	;# 
   110  028D                     	;# 
   111  028E                     	;# 
   112  028F                     	;# 
   113  0290                     	;# 
   114  0291                     	;# 
   115  030C                     	;# 
   116  030C                     	;# 
   117  030D                     	;# 
   118  030E                     	;# 
   119  030F                     	;# 
   120  0310                     	;# 
   121  0310                     	;# 
   122  0311                     	;# 
   123  0312                     	;# 
   124  0313                     	;# 
   125  0314                     	;# 
   126  0314                     	;# 
   127  0315                     	;# 
   128  0316                     	;# 
   129  0318                     	;# 
   130  0318                     	;# 
   131  0319                     	;# 
   132  031A                     	;# 
   133  059C                     	;# 
   134  059C                     	;# 
   135  059D                     	;# 
   136  059D                     	;# 
   137  059E                     	;# 
   138  059F                     	;# 
   139  070C                     	;# 
   140  070D                     	;# 
   141  070E                     	;# 
   142  0716                     	;# 
   143  0717                     	;# 
   144  0718                     	;# 
   145  080C                     	;# 
   146  0811                     	;# 
   147  0813                     	;# 
   148  0814                     	;# 
   149  081A                     	;# 
   150  081A                     	;# 
   151  081B                     	;# 
   152  081C                     	;# 
   153  081C                     	;# 
   154  081D                     	;# 
   155  081E                     	;# 
   156  081F                     	;# 
   157  088E                     	;# 
   158  0890                     	;# 
   159  0891                     	;# 
   160  0892                     	;# 
   161  0893                     	;# 
   162  090C                     	;# 
   163  1E8F                     	;# 
   164  1E90                     	;# 
   165  1E91                     	;# 
   166  1E92                     	;# 
   167  1E93                     	;# 
   168  1E9C                     	;# 
   169  1EA1                     	;# 
   170  1EA2                     	;# 
   171  1EC3                     	;# 
   172  1EC5                     	;# 
   173  1EC6                     	;# 
   174  1EC7                     	;# 
   175  1ECB                     	;# 
   176  1ECB                     	;# 
   177  1ECB                     	;# 
   178  1ECC                     	;# 
   179  1ECC                     	;# 
   180  1ECC                     	;# 
   181  1F10                     	;# 
   182  1F11                     	;# 
   183  1F12                     	;# 
   184  1F14                     	;# 
   185  1F15                     	;# 
   186  1F1C                     	;# 
   187  1F1D                     	;# 
   188  1F1E                     	;# 
   189  1F1F                     	;# 
   190  1F20                     	;# 
   191  1F21                     	;# 
   192  1F22                     	;# 
   193  1F23                     	;# 
   194  1F24                     	;# 
   195  1F25                     	;# 
   196  1F26                     	;# 
   197  1F27                     	;# 
   198  1F38                     	;# 
   199  1F39                     	;# 
   200  1F3A                     	;# 
   201  1F3B                     	;# 
   202  1F3C                     	;# 
   203  1F3D                     	;# 
   204  1F3E                     	;# 
   205  1F3F                     	;# 
   206  1F43                     	;# 
   207  1F44                     	;# 
   208  1F45                     	;# 
   209  1F46                     	;# 
   210  1F47                     	;# 
   211  1F48                     	;# 
   212  1F49                     	;# 
   213  1F4A                     	;# 
   214  1F4E                     	;# 
   215  1F4F                     	;# 
   216  1F50                     	;# 
   217  1F51                     	;# 
   218  1F52                     	;# 
   219  1F53                     	;# 
   220  1F54                     	;# 
   221  1F55                     	;# 
   222  1FE4                     	;# 
   223  1FE5                     	;# 
   224  1FE6                     	;# 
   225  1FE7                     	;# 
   226  1FE8                     	;# 
   227  1FE8                     	;# 
   228  1FE9                     	;# 
   229  1FEA                     	;# 
   230  1FEB                     	;# 
   231  1FED                     	;# 
   232  1FEE                     	;# 
   233  1FEF                     	;# 
   234                           
   235                           	psect	idataCOMMON
   236  077A                     __pidataCOMMON:
   237                           
   238                           ;initializer for _dutyCycle100
   239  077A  34E7               	retlw	231
   240  077B  3403               	retlw	3
   241                           
   242                           ;initializer for _dutyCycle75
   243  077C  34EE               	retlw	238
   244  077D  3402               	retlw	2
   245                           
   246                           ;initializer for _dutyCycle50
   247  077E  34F4               	retlw	244
   248  077F  3401               	retlw	1
   249                           
   250                           ;initializer for _dutyCycle10
   251  0780  340A               	retlw	10
   252  0781  3400               	retlw	0
   253  0014                     _TRISC	set	20
   254  0013                     _TRISB	set	19
   255  0012                     _TRISA	set	18
   256  001A                     _LATC	set	26
   257  0019                     _LATB	set	25
   258  0018                     _LATA	set	24
   259  00A2                     _TRISC2	set	162
   260  0092                     _TRISA2	set	146
   261  028E                     _T2CON	set	654
   262  028C                     _T2TMR	set	652
   263  028D                     _T2PR	set	653
   264  0291                     _T2RST	set	657
   265  028F                     _T2HLT	set	655
   266  0290                     _T2CLKCON	set	656
   267  0314                     _PWM3DCL	set	788
   268  0315                     _PWM3DCH	set	789
   269  0316                     _PWM3CON	set	790
   270  070D                     _PIR1bits	set	1805
   271  0892                     _OSCTUNE	set	2194
   272  0893                     _OSCFRQ	set	2195
   273  0891                     _OSCEN	set	2193
   274  1F12                     _RA2PPS	set	7954
   275  1F38                     _ANSELAbits	set	7992
   276  1F52                     _INLVLC	set	8018
   277  1F47                     _INLVLB	set	8007
   278  1F3C                     _INLVLA	set	7996
   279  1F51                     _SLRCONC	set	8017
   280  1F46                     _SLRCONB	set	8006
   281  1F3B                     _SLRCONA	set	7995
   282  1F50                     _ODCONC	set	8016
   283  1F45                     _ODCONB	set	8005
   284  1F3A                     _ODCONA	set	7994
   285  1F4F                     _WPUC	set	8015
   286  1F39                     _WPUA	set	7993
   287  1F44                     _WPUB	set	8004
   288  1F38                     _ANSELA	set	7992
   289  1F43                     _ANSELB	set	8003
   290  1F4E                     _ANSELC	set	8014
   291  FA7A                     _WPUC2	set	64122
   292                           
   293                           	psect	cinit
   294  07F1                     start_initialization:	
   295                           ; #config settings
   296                           
   297  07F1                     __initialization:
   298                           
   299                           ; Initialize objects allocated to COMMON
   300  07F1  307A               	movlw	low __pidataCOMMON
   301  07F2  0084               	movwf	4
   302  07F3  3087               	movlw	(high __pidataCOMMON)| (0+128)
   303  07F4  0085               	movwf	5
   304  07F5  3070               	movlw	low __pdataCOMMON
   305  07F6  0086               	movwf	6
   306  07F7  3000               	movlw	high __pdataCOMMON
   307  07F8  0087               	movwf	7
   308  07F9  3008               	movlw	8
   309  07FA  3187  276C  3187   	fcall	init_ram
   310  07FD                     end_of_initialization:	
   311                           ;End of C runtime variable initialization code
   312                           
   313  07FD                     __end_of__initialization:
   314  07FD  0140               	movlb	0
   315  07FE  3187  2FA6         	ljmp	_main	;jump to C main() function
   316                           
   317                           	psect	dataCOMMON
   318  0070                     __pdataCOMMON:
   319  0070                     _dutyCycle100:
   320  0070                     	ds	2
   321  0072                     _dutyCycle75:
   322  0072                     	ds	2
   323  0074                     _dutyCycle50:
   324  0074                     	ds	2
   325  0076                     _dutyCycle10:
   326  0076                     	ds	2
   327                           
   328                           	psect	inittext
   329  076C                     init_ram:
   330  076C  00FE               	movwf	btemp
   331  076D                     initloop:
   332  076D  0012               	moviw fsr0++
   333  076E  001E               	movwi fsr1++
   334  076F  0BFE               	decfsz	btemp,f
   335  0770  2F6D               	goto	initloop
   336  0771  3400               	retlw	0
   337                           
   338                           	psect	cstackCOMMON
   339  0078                     __pcstackCOMMON:
   340  0078                     ?_PIN_MANAGER_Initialize:
   341  0078                     ??_PIN_MANAGER_Initialize:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0078                     ?_OSCILLATOR_Initialize:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0078                     ??_OSCILLATOR_Initialize:	
   348                           ; 1 bytes @ 0x0
   349                           
   350  0078                     ?_TMR2_Initialize:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0078                     ??_TMR2_Initialize:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0078                     ?_PWM3_Initialize:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0078                     ??_PWM3_Initialize:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0078                     ?_PWM3_LoadDutyValue:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0078                     ?_main:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0078                     PWM3_LoadDutyValue@dutyValue:	
   369                           ; 1 bytes @ 0x0
   370                           
   371                           
   372                           ; 2 bytes @ 0x0
   373  0078                     	ds	2
   374  007A                     ??_PWM3_LoadDutyValue:
   375                           
   376                           ; 1 bytes @ 0x2
   377  007A                     	ds	2
   378  007C                     ??_main:
   379                           
   380                           ; 1 bytes @ 0x4
   381  007C                     	ds	1
   382                           
   383                           	psect	maintext
   384  07A6                     __pmaintext:	
   385 ;;
   386 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   387 ;;
   388 ;; *************** function _main *****************
   389 ;; Defined at:
   390 ;;		line 142 in file "main.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, pclath, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : B3F/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   404 ;;      Params:         0       0       0       0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0       0       0       0
   406 ;;      Temps:          1       0       0       0       0       0       0       0
   407 ;;      Totals:         1       0       0       0       0       0       0       0
   408 ;;Total ram usage:        1 bytes
   409 ;; Hardware stack levels required when called:    1
   410 ;; This function calls:
   411 ;;		_OSCILLATOR_Initialize
   412 ;;		_PIN_MANAGER_Initialize
   413 ;;		_PWM3_Initialize
   414 ;;		_PWM3_LoadDutyValue
   415 ;;		_TMR2_Initialize
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           
   422                           ;psect for function _main
   423  07A6                     _main:
   424  07A6                     l709:	
   425                           ;incstack = 0
   426                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   427                           
   428                           
   429                           ;main.c: 144:     PIN_MANAGER_Initialize();
   430  07A6  3187  27C3  3187   	fcall	_PIN_MANAGER_Initialize
   431  07A9                     l711:
   432                           
   433                           ;main.c: 145:     OSCILLATOR_Initialize();
   434  07A9  3187  2767  3187   	fcall	_OSCILLATOR_Initialize
   435  07AC                     l713:
   436                           
   437                           ;main.c: 146:     TMR2_Initialize();
   438  07AC  3187  2782  3187   	fcall	_TMR2_Initialize
   439  07AF                     l715:
   440                           
   441                           ;main.c: 147:     PWM3_Initialize();
   442  07AF  3187  2772  3187   	fcall	_PWM3_Initialize
   443  07B2                     l717:
   444                           
   445                           ;main.c: 149:       PWM3_LoadDutyValue(dutyCycle10);
   446  07B2  300A               	movlw	10
   447  07B3  00F8               	movwf	PWM3_LoadDutyValue@dutyValue
   448  07B4  3000               	movlw	0
   449  07B5  00F9               	movwf	PWM3_LoadDutyValue@dutyValue+1
   450  07B6  3187  2790  3187   	fcall	_PWM3_LoadDutyValue
   451  07B9                     l719:
   452                           
   453                           ;main.c: 150:       _delay((unsigned long)((10)*(1000000/4000.0)));
   454  07B9  3004               	movlw	4
   455  07BA  00FC               	movwf	??_main
   456  07BB  303E               	movlw	62
   457  07BC                     u37:
   458  07BC  0B89               	decfsz	9,f
   459  07BD  2FBC               	goto	u37
   460  07BE  0BFC               	decfsz	??_main,f
   461  07BF  2FBC               	goto	u37
   462  07C0  2FB2               	goto	l717
   463  07C1  3180  2802         	ljmp	start
   464  07C3                     __end_of_main:
   465                           
   466                           	psect	text1
   467  0782                     __ptext1:	
   468 ;; *************** function _TMR2_Initialize *****************
   469 ;; Defined at:
   470 ;;		line 114 in file "main.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, status,2
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   484 ;;      Params:         0       0       0       0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0       0       0       0
   487 ;;      Totals:         0       0       0       0       0       0       0       0
   488 ;;Total ram usage:        0 bytes
   489 ;; Hardware stack levels used:    1
   490 ;; This function calls:
   491 ;;		Nothing
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           
   498                           ;psect for function _TMR2_Initialize
   499  0782                     _TMR2_Initialize:
   500  0782                     l679:	
   501                           ;incstack = 0
   502                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
   503                           
   504                           
   505                           ;main.c: 116:     T2CLKCON = 0x01;
   506  0782  3001               	movlw	1
   507  0783  0145               	movlb	5	; select bank5
   508  0784  0090               	movwf	16	;volatile
   509  0785                     l681:
   510                           
   511                           ;main.c: 117:     T2HLT = 0x00;
   512  0785  018F               	clrf	15	;volatile
   513  0786                     l683:
   514                           
   515                           ;main.c: 118:     T2RST = 0x00;
   516  0786  0191               	clrf	17	;volatile
   517                           
   518                           ;main.c: 119:     T2PR = 249;
   519  0787  30F9               	movlw	249
   520  0788  008D               	movwf	13	;volatile
   521  0789                     l685:
   522                           
   523                           ;main.c: 120:     T2TMR = 0x00;
   524  0789  018C               	clrf	12	;volatile
   525  078A                     l687:
   526                           
   527                           ;main.c: 121:     PIR1bits.TMR2IF = 0;
   528  078A  014E               	movlb	14	; select bank14
   529  078B  130D               	bcf	13,6	;volatile
   530  078C                     l689:
   531                           
   532                           ;main.c: 122:     T2CON = 0b10000000;
   533  078C  3080               	movlw	128
   534  078D  0145               	movlb	5	; select bank5
   535  078E  008E               	movwf	14	;volatile
   536  078F                     l97:
   537  078F  0008               	return
   538  0790                     __end_of_TMR2_Initialize:
   539                           
   540                           	psect	text2
   541  0790                     __ptext2:	
   542 ;; *************** function _PWM3_LoadDutyValue *****************
   543 ;; Defined at:
   544 ;;		line 134 in file "main.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;  dutyValue       2    0[COMMON] unsigned short 
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, status,2, status,0
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   558 ;;      Params:         2       0       0       0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0       0       0       0
   560 ;;      Temps:          2       0       0       0       0       0       0       0
   561 ;;      Totals:         4       0       0       0       0       0       0       0
   562 ;;Total ram usage:        4 bytes
   563 ;; Hardware stack levels used:    1
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           
   572                           ;psect for function _PWM3_LoadDutyValue
   573  0790                     _PWM3_LoadDutyValue:
   574  0790                     l707:	
   575                           ;incstack = 0
   576                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
   577                           
   578                           
   579                           ;main.c: 134:  void PWM3_LoadDutyValue(uint16_t dutyValue);main.c: 135:     {;main.c: 13
      +                          6:         PWM3DCH = (dutyValue & 0x03FC)>>2;
   580  0790  0879               	movf	PWM3_LoadDutyValue@dutyValue+1,w
   581  0791  00FB               	movwf	??_PWM3_LoadDutyValue+1
   582  0792  0878               	movf	PWM3_LoadDutyValue@dutyValue,w
   583  0793  00FA               	movwf	??_PWM3_LoadDutyValue
   584  0794  36FB               	lsrf	??_PWM3_LoadDutyValue+1,f
   585  0795  0CFA               	rrf	??_PWM3_LoadDutyValue,f
   586  0796  36FB               	lsrf	??_PWM3_LoadDutyValue+1,f
   587  0797  0CFA               	rrf	??_PWM3_LoadDutyValue,f
   588  0798  087A               	movf	??_PWM3_LoadDutyValue,w
   589  0799  0146               	movlb	6	; select bank6
   590  079A  0095               	movwf	21	;volatile
   591                           
   592                           ;main.c: 137:         PWM3DCL = (dutyValue & 0x0003)<<6;
   593  079B  0878               	movf	PWM3_LoadDutyValue@dutyValue,w
   594  079C  3903               	andlw	3
   595  079D  00FA               	movwf	??_PWM3_LoadDutyValue
   596  079E  3005               	movlw	5
   597  079F                     u25:
   598  079F  35FA               	lslf	??_PWM3_LoadDutyValue,f
   599  07A0  3EFF               	addlw	-1
   600  07A1  1D03               	skipz
   601  07A2  2F9F               	goto	u25
   602  07A3  357A               	lslf	??_PWM3_LoadDutyValue,w
   603  07A4  0094               	movwf	20	;volatile
   604  07A5                     l103:
   605  07A5  0008               	return
   606  07A6                     __end_of_PWM3_LoadDutyValue:
   607                           
   608                           	psect	text3
   609  0772                     __ptext3:	
   610 ;; *************** function _PWM3_Initialize *****************
   611 ;; Defined at:
   612 ;;		line 125 in file "main.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   626 ;;      Params:         0       0       0       0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0       0       0       0
   628 ;;      Temps:          0       0       0       0       0       0       0       0
   629 ;;      Totals:         0       0       0       0       0       0       0       0
   630 ;;Total ram usage:        0 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; This function calls:
   633 ;;		Nothing
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           
   640                           ;psect for function _PWM3_Initialize
   641  0772                     _PWM3_Initialize:
   642  0772                     l691:	
   643                           ;incstack = 0
   644                           ; Regs used in _PWM3_Initialize: [wreg]
   645                           
   646                           
   647                           ;main.c: 127:     PWM3CON = 0x90;
   648  0772  3090               	movlw	144
   649  0773  0146               	movlb	6	; select bank6
   650  0774  0096               	movwf	22	;volatile
   651                           
   652                           ;main.c: 128:     PWM3DCH = 0x3E;
   653  0775  303E               	movlw	62
   654  0776  0095               	movwf	21	;volatile
   655                           
   656                           ;main.c: 129:     PWM3DCL = 0x40;
   657  0777  3040               	movlw	64
   658  0778  0094               	movwf	20	;volatile
   659  0779                     l100:
   660  0779  0008               	return
   661  077A                     __end_of_PWM3_Initialize:
   662                           
   663                           	psect	text4
   664  07C3                     __ptext4:	
   665 ;; *************** function _PIN_MANAGER_Initialize *****************
   666 ;; Defined at:
   667 ;;		line 59 in file "main.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   681 ;;      Params:         0       0       0       0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels used:    1
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _PIN_MANAGER_Initialize
   696  07C3                     _PIN_MANAGER_Initialize:
   697  07C3                     l637:	
   698                           ;incstack = 0
   699                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
   700                           
   701                           
   702                           ;main.c: 62:     LATA = 0x00;
   703  07C3  0140               	movlb	0	; select bank0
   704  07C4  0198               	clrf	24	;volatile
   705                           
   706                           ;main.c: 63:     LATB = 0x00;
   707  07C5  0199               	clrf	25	;volatile
   708                           
   709                           ;main.c: 64:     LATC = 0x00;
   710  07C6  019A               	clrf	26	;volatile
   711  07C7                     l639:
   712                           
   713                           ;main.c: 67:     TRISA = 0x3B;
   714  07C7  303B               	movlw	59
   715  07C8  0092               	movwf	18	;volatile
   716  07C9                     l641:
   717                           
   718                           ;main.c: 68:     TRISB = 0xF0;
   719  07C9  30F0               	movlw	240
   720  07CA  0093               	movwf	19	;volatile
   721  07CB                     l643:
   722                           
   723                           ;main.c: 69:     TRISC = 0xFF;
   724  07CB  30FF               	movlw	255
   725  07CC  0094               	movwf	20	;volatile
   726  07CD                     l645:
   727                           
   728                           ;main.c: 72:     ANSELC = 0xFB;
   729  07CD  30FB               	movlw	251
   730  07CE  017E               	movlb	62	; select bank62
   731  07CF  00CE               	movwf	78	;volatile
   732  07D0                     l647:
   733                           
   734                           ;main.c: 73:     ANSELB = 0xF0;
   735  07D0  30F0               	movlw	240
   736  07D1  00C3               	movwf	67	;volatile
   737  07D2                     l649:
   738                           
   739                           ;main.c: 74:     ANSELA = 0x33;
   740  07D2  3033               	movlw	51
   741  07D3  00B8               	movwf	56	;volatile
   742                           
   743                           ;main.c: 77:     WPUB = 0x00;
   744  07D4  01C4               	clrf	68	;volatile
   745  07D5                     l651:
   746                           
   747                           ;main.c: 78:     WPUA = 0x04;
   748  07D5  3004               	movlw	4
   749  07D6  00B9               	movwf	57	;volatile
   750  07D7                     l653:
   751                           
   752                           ;main.c: 79:     WPUC = 0x04;
   753  07D7  3004               	movlw	4
   754  07D8  00CF               	movwf	79	;volatile
   755                           
   756                           ;main.c: 82:     ODCONA = 0x00;
   757  07D9  01BA               	clrf	58	;volatile
   758                           
   759                           ;main.c: 83:     ODCONB = 0x00;
   760  07DA  01C5               	clrf	69	;volatile
   761                           
   762                           ;main.c: 84:     ODCONC = 0x00;
   763  07DB  01D0               	clrf	80	;volatile
   764  07DC                     l655:
   765                           
   766                           ;main.c: 87:     SLRCONA = 0x37;
   767  07DC  3037               	movlw	55
   768  07DD  00BB               	movwf	59	;volatile
   769  07DE                     l657:
   770                           
   771                           ;main.c: 88:     SLRCONB = 0xF0;
   772  07DE  30F0               	movlw	240
   773  07DF  00C6               	movwf	70	;volatile
   774  07E0                     l659:
   775                           
   776                           ;main.c: 89:     SLRCONC = 0xFF;
   777  07E0  30FF               	movlw	255
   778  07E1  00D1               	movwf	81	;volatile
   779  07E2                     l661:
   780                           
   781                           ;main.c: 92:     INLVLA = 0x3F;
   782  07E2  303F               	movlw	63
   783  07E3  00BC               	movwf	60	;volatile
   784  07E4                     l663:
   785                           
   786                           ;main.c: 93:     INLVLB = 0xF0;
   787  07E4  30F0               	movlw	240
   788  07E5  00C7               	movwf	71	;volatile
   789  07E6                     l665:
   790                           
   791                           ;main.c: 94:     INLVLC = 0xFF;
   792  07E6  30FF               	movlw	255
   793  07E7  00D2               	movwf	82	;volatile
   794  07E8                     l667:
   795                           
   796                           ;main.c: 97:     TRISA2 = 0;
   797  07E8  0140               	movlb	0	; select bank0
   798  07E9  1112               	bcf	18,2	;volatile
   799  07EA                     l669:
   800                           
   801                           ;main.c: 98:     TRISC2 = 1;
   802  07EA  1514               	bsf	20,2	;volatile
   803  07EB                     l671:
   804                           
   805                           ;main.c: 99:     WPUC2 = 1;
   806  07EB  017E               	movlb	62	; select bank62
   807  07EC  154F               	bsf	79,2	;volatile
   808  07ED                     l673:
   809                           
   810                           ;main.c: 100:     ANSELAbits.ANSA1 = 1;
   811  07ED  14B8               	bsf	56,1	;volatile
   812  07EE                     l675:
   813                           
   814                           ;main.c: 102:     RA2PPS = 0x03;
   815  07EE  3003               	movlw	3
   816  07EF  0092               	movwf	18	;volatile
   817  07F0                     l91:
   818  07F0  0008               	return
   819  07F1                     __end_of_PIN_MANAGER_Initialize:
   820                           
   821                           	psect	text5
   822  0767                     __ptext5:	
   823 ;; *************** function _OSCILLATOR_Initialize *****************
   824 ;; Defined at:
   825 ;;		line 107 in file "main.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		status,2
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   839 ;;      Params:         0       0       0       0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0
   842 ;;      Totals:         0       0       0       0       0       0       0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _OSCILLATOR_Initialize
   854  0767                     _OSCILLATOR_Initialize:
   855  0767                     l677:	
   856                           ;incstack = 0
   857                           ; Regs used in _OSCILLATOR_Initialize: [status,2]
   858                           
   859                           
   860                           ;main.c: 109:     OSCEN = 0x00;
   861  0767  0151               	movlb	17	; select bank17
   862  0768  0191               	clrf	17	;volatile
   863                           
   864                           ;main.c: 110:     OSCFRQ = 0x00;
   865  0769  0193               	clrf	19	;volatile
   866                           
   867                           ;main.c: 111:     OSCTUNE = 0x00;
   868  076A  0192               	clrf	18	;volatile
   869  076B                     l94:
   870  076B  0008               	return
   871  076C                     __end_of_OSCILLATOR_Initialize:
   872  007E                     btemp	set	126	;btemp
   873  007E                     wtemp0	set	126
   874                           
   875                           	psect	config
   876                           
   877                           ;Config register CONFIG1 @ 0x8007
   878                           ;	External Oscillator Mode Selection bits
   879                           ;	FEXTOSC = OFF, Oscillator not enabled
   880                           ;	Power-up Default Value for COSC bits
   881                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC (1 MHz)
   882                           ;	Clock Out Enable bit
   883                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O function on RA4
   884                           ;	VDD Range Analog Calibration Selection bit
   885                           ;	VDDAR = HI, Internal analog systems are calibrated for operation between VDD = 2.3V - 
      +                          5.5V
   886  8007                     	org	32775
   887  8007  3FED               	dw	16365
   888                           
   889                           ;Config register CONFIG2 @ 0x8008
   890                           ;	Master Clear Enable bit
   891                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RA3 pin function is MCLR
   892                           ;	Power-up Timer Selection bits
   893                           ;	PWRTS = PWRT_OFF, PWRT is disabled
   894                           ;	WDT Operating Mode bits
   895                           ;	WDTE = OFF, WDT disabled; SEN is ignored
   896                           ;	Brown-out Reset Enable bits
   897                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
   898                           ;	Brown-out Reset Voltage Selection bit
   899                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V
   900                           ;	PPSLOCKED One-Way Set Enable bit
   901                           ;	PPS1WAY = ON, The PPSLOCKED bit can be cleared and set only once in software
   902                           ;	Stack Overflow/Underflow Reset Enable bit
   903                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
   904  8008                     	org	32776
   905  8008  3FE7               	dw	16359
   906                           
   907                           ;Config register CONFIG4 @ 0x800A
   908                           ;	Boot Block Size Selection bits
   909                           ;	BBSIZE = BB512, 512 words boot block size
   910                           ;	Boot Block Enable bit
   911                           ;	BBEN = OFF, Boot Block is disabled
   912                           ;	SAF Enable bit
   913                           ;	SAFEN = OFF, SAF is disabled
   914                           ;	Application Block Write Protection bit
   915                           ;	WRTAPP = OFF, Application Block is not write-protected
   916                           ;	Boot Block Write Protection bit
   917                           ;	WRTB = OFF, Boot Block is not write-protected
   918                           ;	Configuration Registers Write Protection bit
   919                           ;	WRTC = OFF, Configuration Registers are not write-protected
   920                           ;	Storage Area Flash (SAF) Write Protection bit
   921                           ;	WRTSAF = OFF, SAF is not write-protected
   922                           ;	Low Voltage Programming Enable bit
   923                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR. MCLRE Config
      +                          uration bit is ignored.
   924  800A                     	org	32778
   925  800A  3FFF               	dw	16383
   926                           
   927                           ;Config register CONFIG5 @ 0x800B
   928                           ;	User Program Flash Memory Code Protection bit
   929                           ;	CP = OFF, User Program Flash Memory code protection is disabled
   930  800B                     	org	32779
   931  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        8
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM3_LoadDutyValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     120
                                              4 COMMON     1     1      0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                 _PWM3_LoadDutyValue
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (1) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM3_LoadDutyValue                                   4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OSCILLATOR_Initialize
   _PIN_MANAGER_Initialize
   _PWM3_Initialize
   _PWM3_LoadDutyValue
   _TMR2_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0       D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Apr 29 15:11:28 2021

                             l91 07F0                               l94 076B                               l97 078F  
                             u25 079F                               u37 07BC                              l100 0779  
                            l103 07A5                              l711 07A9                              l641 07C9  
                            l713 07AC                              l651 07D5                              l643 07CB  
                            l707 0790                              l715 07AF                              l661 07E2  
                            l653 07D7                              l645 07CD                              l637 07C3  
                            l717 07B2                              l709 07A6                              l671 07EB  
                            l663 07E4                              l655 07DC                              l647 07D0  
                            l639 07C7                              l719 07B9                              l673 07ED  
                            l665 07E6                              l657 07DE                              l649 07D2  
                            l681 0785                              l675 07EE                              l667 07E8  
                            l659 07E0                              l691 0772                              l683 0786  
                            l677 0767                              l669 07EA                              l685 0789  
                            l687 078A                              l679 0782                              l689 078C  
                _TMR2_Initialize 0782                              wreg 0009                             _LATA 0018  
                           _LATB 0019                             _LATC 001A                             _T2PR 028D  
                           _WPUA 1F39                             _WPUB 1F44                             _WPUC 1F4F  
                           _main 07A6                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             fsr1l 0006                             btemp 007E  
                           start 0002   __size_of_OSCILLATOR_Initialize 0005    __end_of_OSCILLATOR_Initialize 076C  
                          ?_main 0078                            _T2CON 028E                            _T2HLT 028F  
                          _T2TMR 028C                            _T2RST 0291                            _OSCEN 0891  
                          _TRISA 0012                            _TRISB 0013                            _TRISC 0014  
                          _WPUC2 FA7A          __end_of_PWM3_Initialize 077A                            wtemp0 007E  
                __initialization 07F1                     __end_of_main 07C3          __end_of_TMR2_Initialize 0790  
                         ??_main 007C                           _ANSELA 1F38                           _ANSELB 1F43  
                         _ANSELC 1F4E                           _RA2PPS 1F12                           _ODCONA 1F3A  
                         _ODCONB 1F45                           _ODCONC 1F50                           _INLVLA 1F3C  
                         _INLVLB 1F47                           _INLVLC 1F52                           _OSCFRQ 0893  
                         _TRISA2 0092                           _TRISC2 00A2      __size_of_PWM3_LoadDutyValue 0016  
                   __pdataCOMMON 0070                 ?_PWM3_Initialize 0078          __end_of__initialization 07FD  
                 __pcstackCOMMON 0078                 ?_TMR2_Initialize 0078                       __pmaintext 07A6  
                        _OSCTUNE 0892                          _PWM3DCH 0315                          _PWM3DCL 0314  
                        _PWM3CON 0316                          _SLRCONA 1F3B                          _SLRCONB 1F46  
                        _SLRCONC 1F51                          __ptext1 0782                          __ptext2 0790  
                        __ptext3 0772                          __ptext4 07C3                          __ptext5 0767  
          _OSCILLATOR_Initialize 0767         ??_PIN_MANAGER_Initialize 0078             end_of_initialization 07FD  
                        init_ram 076C                          initloop 076D       __end_of_PWM3_LoadDutyValue 07A6  
                  __pidataCOMMON 077A           ?_OSCILLATOR_Initialize 0078              start_initialization 07F1  
__size_of_PIN_MANAGER_Initialize 002E         __size_of_PWM3_Initialize 0008                        ___latbits 0001  
       __size_of_TMR2_Initialize 000E                     _dutyCycle100 0070           _PIN_MANAGER_Initialize 07C3  
                       _T2CLKCON 0290                         _PIR1bits 070D                ??_PWM3_Initialize 0078  
              ??_TMR2_Initialize 0078          ??_OSCILLATOR_Initialize 0078               _PWM3_LoadDutyValue 0790  
                     _ANSELAbits 1F38                      _dutyCycle10 0076                      _dutyCycle50 0074  
                    _dutyCycle75 0072              ?_PWM3_LoadDutyValue 0078                    __size_of_main 001D  
           ??_PWM3_LoadDutyValue 007A          ?_PIN_MANAGER_Initialize 0078      PWM3_LoadDutyValue@dutyValue 0078  
 __end_of_PIN_MANAGER_Initialize 07F1                  _PWM3_Initialize 0772  
